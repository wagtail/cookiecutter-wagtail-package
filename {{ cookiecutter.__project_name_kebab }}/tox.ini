[tox]
skipsdist = True
usedevelop = True

envlist =
    python{3.8,3.9,3.10,3.11}-django{3.2}-wagtail{4.1}-{sqlite,postgres}
    python{3.8,3.9,3.10,3.11}-django{3.2,4.2}-wagtail{5.1,5.2}-{sqlite,postgres}
    python{3.12}-django{4.2}-wagtail{5.2}-{sqlite,postgres}

[gh-actions]
python =
    3.8: python3.8
    3.9: python3.9
    3.10: python3.10
    3.11: python3.11
    3.12: python3.12

[gh-actions:env]
DB =
    sqlite: sqlite
    postgres: postgres

[testenv]
install_command = pip install -e ".[testing]" -U {opts} {packages}
commands = coverage run testmanage.py test --deprecation all {posargs: -v 2}

basepython =
    python3.8: python3.8
    python3.9: python3.9
    python3.10: python3.10
    python3.11: python3.11
    python3.12: python3.12

deps =
    coverage

    django3.2: Django>=3.2,<4.0
    django4.2: Django>=4.2,<4.3
    djangomain: git+https://github.com/django/django.git@main#egg=Django

    wagtail4.1: wagtail>=4.1,<4.2
    wagtail5.1: wagtail>=5.1,<5.2
    wagtail5.2: wagtail>=5.2,<5.3

    postgres: psycopg2>=2.6

setenv =
    postgres: DATABASE_URL={env:DATABASE_URL:postgres:///{{ cookiecutter.__project_name_snake }}}

[testenv:interactive]
basepython = python3.10

commands_pre =
    python {toxinidir}/testmanage.py makemigrations
    python {toxinidir}/testmanage.py migrate
    python {toxinidir}/testmanage.py shell -c "from django.contrib.auth.models import User;(not User.objects.filter(username='admin').exists()) and User.objects.create_superuser('admin', 'super@example.com', 'changeme')"
    python {toxinidir}/testmanage.py createcachetable

commands =
    {posargs:python testmanage.py runserver 0.0.0.0:8020}

setenv =
    INTERACTIVE = 1
